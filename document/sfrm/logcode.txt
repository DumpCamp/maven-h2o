------------------------------------------------------------------------------------------------
-    SFRM (Smart File Reliable Messaging) Plugin Log Code    -
------------------------------------------------------------------------------------------------
This is the code to descriprion translation table for SFRM Log. 

Version: 1.0.4

The normal flow of SFRM using the following syntax to log.

YYYY-MM-DD hh:mm:ss [(Thread | Processor) number] <DEBUG|INFO|ERROR|FATAL|WARN> < (CALLER): (ACTION) (INFO) (CONTENT) >

For example,

2007-02-21 10:58:36 [-Processor22] <INFO > < In MH :  [RECV SGT ] msg id: 1-Loopback and sgt no: 9>

This represents a segment(SGT) with no 9(sgt no: 9) for message id is 1-Loopback has been received(RECV) 
at the incoming message handler (In MH).

General Notation:
msg             : message
sgt             : segment
sgt no          : segment number
sgt type        : segment type

(CALLER) Notation: 
OSPTC           : Outgoing Segment Payload Task Collector (the one to generate segment task for sending segment)
OSPT            : Outgoing Segment Payload Task (the task to send the segment)
OPT             : Outgoing Payload Task (the one to do handshaking and package the payload)
OPPT            : Outgoing Packaged Payload Task (the one to insert segments into DB)
IPT             : Incoming Payload Task (the one to extract the receiving archive)
outMH           : Outgoing Message Handler (the core handler for sending outgoing segment )
in MH           : Incoming Message Handler (the core handler for receiving all kind of segment and process them)
MEM             : The current memory available in the VM (DEBUG only)
MEM GC          : The current memory available in the VM after try to execute gc() method (DEBUG only)
MSHDAO          : DAO Message Segment Handler (the wrapper of DAO layer).

(ACTION) Notation:
[SIGN SGT ]     : Signing outbound segment using key (outgoing, at outMH)
[VRFY SGT ]     : Verify receiving segment using public cert (incoming, at inMH)
[ECYT SGT ]     : Encrypt outbound segment using public cert (outgoing, at outMH | OSPT)
[DCYT SGT ]     : Decrypt receiving segment using key (incoming, at inMH)
[UNPK SGT ]     : Unpacking (verification or decryption) segment successfully (incoming, at inMH)
[PACK MSG ]     : Packing (archiving the payload) into one. (outgoing, at OPT) 
[UNPK MSG ]     : Un-packing (extract the archive to payloads). (incoming, at IPT)
[RECV SGT ]     : Receive a segment (incoming, at inMH)
[RECV DUP ]     : Receive a duplicated segment (incoming, at inMH)
[SPAN THRD]     : Span a new thread for handling incoming segment request (incoming, at inMH)
[RECV HDSK]     : Receive a handshaking request (incoming, at inMH)
[RECV META]     : Receive a meta request (incoming, at inMH)
[RECV ALL ]     : Receive all segment for particular message, ready to do un-packaging.
[CRTE SGT ]     : Create a new segments DB record (incoming & outgoing, at MSHDAO)
[PASS CRC ]     : CRC integrity check successfuly (incoming, at inMH, PAYLOAD only)
[FAIL CRC ]     : CRC integrity check fail (incoming, at inMH, PAYLOAD only)
[OUTG TASK]     : An outgoing segment task has been assigned to this thread, start to work. (outgoing, at OSPT)
[SEND SGT ]     : Sending a segments to particular endpoint shown in the content (outgoing, at outMH)
[SEND HDSK]     : Sending a handshaking request for start the conversion (outgoing, at OPT)
[INST SGTS]     : Inserts a series of segments into persistence layer (outgoing, at OPPT)
[INIT LOAD]     : First load of component. 
[ROLL BACK]     : Rolling back the committed action for the messager (outgoing, at OPT)

(CONTENT) Notation:

1. 'msg id: <message id> ********** CONVERSION DONE *********'   
It represents all segments (including receipt) have been sent and received successfully. The life cycle of this 
message has been finished. This MUST be the content for (ACTION) [RECV ALL ].





 





